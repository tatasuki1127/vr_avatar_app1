# CodeMagic CI/CD Configuration
# VR Avatar App - Flutter + Unity as Library
# GPU最適化・Neural Engine対応iOS専用アプリ

workflows:
  ios-workflow:
    name: iOS VR Avatar App
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.vr.avatar1
      vars:
        XCODE_WORKSPACE: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        APP_ID: 6748548295
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up provisioning profiles
        script: |
          # CodeMagic自動プロビジョニング
          xcode-project use-profiles
      
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install --repo-update
      
      - name: Unity Framework Headers Validation
        script: |
          # Unity Framework headers確認・復元スクリプト
          cd ios
          
          # Headers ディレクトリの確認
          HEADERS_DIR="Frameworks/UnityFramework.framework/Headers"
          
          if [ ! -d "$HEADERS_DIR" ]; then
            echo "🔧 Creating Headers directory..."
            mkdir -p "$HEADERS_DIR"
          fi
          
          # 必須ヘッダーファイルの存在確認
          REQUIRED_HEADERS=("UnityFramework.h" "UnityAppController.h" "RenderPluginDelegate.h" "LifeCycleListener.h")
          
          for header in "${REQUIRED_HEADERS[@]}"; do
            if [ ! -f "$HEADERS_DIR/$header" ]; then
              echo "⚠️  Missing header: $header"
              echo "🔧 Restoring from Git repository..."
              
              # Git から復元を試行
              if git show HEAD:"ios/Frameworks/UnityFramework.framework/Headers/$header" > "$HEADERS_DIR/$header" 2>/dev/null; then
                echo "✅ Restored $header from Git"
              else
                echo "❌ Failed to restore $header from Git"
                exit 1
              fi
            else
              echo "✅ $header exists"
            fi
          done
          
          echo "🎯 All Unity Framework headers validated successfully!"
          cd ..
      
      - name: Unity Framework の自動展開
        script: |
          # Unity Framework zip展開
          cd ios
          if [ -f "UnityFramework.zip" ]; then
            echo "📦 Extracting UnityFramework.zip..."
            unzip -o UnityFramework.zip
            echo "✅ Unity Framework extracted successfully"
            echo "Size: $(du -sh Frameworks/UnityFramework.framework)"
          else
            echo "ℹ️  UnityFramework.zip not found - using Git tracked headers"
          fi
          cd ..
      
      - name: Build iOS app
        script: |
          # GPU最適化ビルド（仕様書準拠）
          flutter build ios --release \
            --dart-define=GPU_OPTIMIZATION=true \
            --dart-define=NEURAL_ENGINE=true \
            --dart-define=METAL_API=true \
            --dart-define=TARGET_FPS=60 \
            --no-codesign
      
      - name: Build .ipa with Xcode
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --archive-flags "-destination 'generic/platform=iOS'"
    
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    
    publishing:
      email:
        recipients:
          - nndds@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false

  debug-workflow:
    name: iOS Debug Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      
      - name: Unity Framework 確認
        script: |
          ls -la ios/Frameworks/
          du -sh ios/Frameworks/UnityFramework.framework/
      
      - name: Build debug iOS
        script: |
          # デバッグビルド（開発用）
          flutter build ios --debug \
            --dart-define=GPU_OPTIMIZATION=false \
            --dart-define=DEBUG_MODE=true \
            --no-codesign
    
    artifacts:
      - build/ios/Debug-iphoneos/*.app