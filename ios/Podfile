# VR Avatar App - iOS Podfile
# Flutter + Unity as Library + GPU最適化
# Uncomment this line to define a global platform for your project
platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Flutter Plugin Dependencies
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Unity Framework Integration
  # UnityFramework is manually added as framework, not via CocoaPods
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # GPU最適化・Metal API設定
    target.build_configurations.each do |config|
      # iOS 15.0 minimum for Neural Engine support
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      
      # GPU最適化設定（仕様書準拠）
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['METAL_ENABLE_DEBUG_INFO'] = config.name == 'Debug' ? 'YES' : 'NO'
      config.build_settings['MTL_ENABLE_DEBUG_INFO'] = config.name == 'Debug' ? 'YES' : 'NO'
      
      # Unity Framework リンク設定 (全ターゲット強制適用)
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      config.build_settings['OTHER_LDFLAGS'] << '-framework UnityFramework'
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '$(SRCROOT)/Frameworks'
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '$(PROJECT_DIR)/Frameworks'
      config.build_settings['LD_RUNPATH_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['LD_RUNPATH_SEARCH_PATHS'] << '@executable_path/Frameworks'
      
      # Swift Module Search Path 強化
      if target.name.include?('flutter_unity_widget') || target.name.include?('Runner')
        config.build_settings['SWIFT_INCLUDE_PATHS'] ||= ['$(inherited)']
        config.build_settings['SWIFT_INCLUDE_PATHS'] << '$(SRCROOT)/Frameworks'
        config.build_settings['SWIFT_INCLUDE_PATHS'] << '$(PROJECT_DIR)/Frameworks'
        # 明示的にUnityFrameworkモジュールパスを追加
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '$(SRCROOT)/Frameworks/UnityFramework.framework'
      end
      
      # ARM64 最適化（Neural Engine対応）
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64' if config.name == 'Debug'
      
      # Swift最適化
      if target.respond_to?(:product_type) && target.product_type == "com.apple.product-type.bundle"
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
  
  # Runner app target への追加設定
  runner_target = installer.pods_project.targets.find { |target| target.name == 'Runner' }
  if runner_target.nil?
    # Runner プロジェクトを直接設定
    installer.aggregate_targets.each do |aggregate_target|
      aggregate_target.user_build_configurations.each do |config_name, config_file|
        config_file.attributes['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
        config_file.attributes['FRAMEWORK_SEARCH_PATHS'] << '$(SRCROOT)/Frameworks'
        config_file.save_as(config_file.path)
      end
    end
  end
end